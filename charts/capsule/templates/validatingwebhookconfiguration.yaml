{{- if or (not $.Values.crds.exclusive) ($.Values.webhooks.exclusive) }}
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "capsule.fullname" . }}-validating-webhook-configuration
  labels:
    {{- include "capsule.labels" . | nindent 4 }}
  annotations:
  {{- if .Values.certManager.generateCertificates }}
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "capsule.fullname" . }}-webhook-cert
  {{-  end }}
  {{- with .Values.customAnnotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
webhooks:
{{- with .Values.webhooks.hooks.cordoning }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/cordoning" "ctx" $) | nindent 4 }}
  failurePolicy: {{ .failurePolicy }}
  matchPolicy: Equivalent
  name: cordoning.tenant.projectcapsule.dev
  namespaceSelector:
  {{- toYaml .namespaceSelector | nindent 4}}
  objectSelector: {}
  rules:
    - apiGroups:
        - '*'
      apiVersions:
        - '*'
      operations:
        - CREATE
        - UPDATE
        - DELETE
      resources:
        - '*'
      scope: Namespaced
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- with .Values.webhooks.hooks.ingresses }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/ingresses" "ctx" $) | nindent 4 }}
  failurePolicy: {{ .failurePolicy }}
  matchPolicy: Equivalent
  name: ingress.projectcapsule.dev
  namespaceSelector:
  {{- toYaml .namespaceSelector | nindent 4}}
  objectSelector: {}
  rules:
    - apiGroups:
        - networking.k8s.io
        - extensions
      apiVersions:
        - v1
        - v1beta1
      operations:
        - CREATE
        - UPDATE
      resources:
        - ingresses
      scope: Namespaced
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{ with .Values.webhooks.hooks.namespaces }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/namespaces" "ctx" $) | nindent 4 }}
  failurePolicy: {{ .failurePolicy }}
  matchPolicy: Equivalent
  name: namespaces.projectcapsule.dev
  namespaceSelector: {}
  objectSelector: {}
  rules:
    - apiGroups:
        - ""
      apiVersions:
        - v1
      operations:
        - CREATE
        - UPDATE
        - DELETE
      resources:
        - namespaces
      scope: '*'
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- with .Values.webhooks.hooks.networkpolicies }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/networkpolicies" "ctx" $) | nindent 4 }}
  failurePolicy: {{ .failurePolicy }}
  matchPolicy: Equivalent
  name: networkpolicies.projectcapsule.dev
  namespaceSelector:
  {{- toYaml .namespaceSelector | nindent 4}}
  objectSelector: {}
  rules:
    - apiGroups:
        - networking.k8s.io
      apiVersions:
        - v1
      operations:
        - UPDATE
        - DELETE
      resources:
        - networkpolicies
      scope: Namespaced
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- with .Values.webhooks.hooks.nodes }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/nodes" "ctx" $) | nindent 4 }}
  failurePolicy: {{ .failurePolicy }}
  name: nodes.projectcapsule.dev
  matchPolicy: Exact
  namespaceSelector: {}
  objectSelector: {}
  rules:
    - apiGroups:
        - ""
      apiVersions:
        - v1
      operations:
        - UPDATE
      resources:
        - nodes
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- with .Values.webhooks.hooks.pods }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/pods" "ctx" $) | nindent 4 }}
  failurePolicy: {{ .failurePolicy }}
  matchPolicy: Exact
  name: pods.projectcapsule.dev
  namespaceSelector:
  {{- toYaml .namespaceSelector | nindent 4}}
  objectSelector: {}
  rules:
    - apiGroups:
        - ""
      apiVersions:
        - v1
      operations:
        - CREATE
        - UPDATE
      resources:
        - pods
      scope: Namespaced
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- with .Values.webhooks.hooks.persistentvolumeclaims }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/persistentvolumeclaims" "ctx" $) | nindent 4 }}
  failurePolicy: {{ .failurePolicy }}
  name: pvc.projectcapsule.dev
  namespaceSelector:
  {{- toYaml .namespaceSelector | nindent 4}}
  objectSelector: {}
  rules:
    - apiGroups:
        - ""
      apiVersions:
        - v1
      operations:
        - CREATE
      resources:
        - persistentvolumeclaims
      scope: Namespaced
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- with .Values.webhooks.hooks.services }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/services" "ctx" $) | nindent 4 }}
  failurePolicy: {{ .failurePolicy }}
  matchPolicy: Exact
  name: services.projectcapsule.dev
  namespaceSelector:
  {{- toYaml .namespaceSelector | nindent 4}}
  objectSelector: {}
  rules:
    - apiGroups:
        - ""
      apiVersions:
        - v1
      operations:
        - CREATE
        - UPDATE
      resources:
        - services
      scope: Namespaced
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- with .Values.webhooks.hooks.tenantResourceObjects }}
- admissionReviewVersions:
    - v1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/tenantresource-objects" "ctx" $) | nindent 4 }}
  failurePolicy:  {{ .failurePolicy }}
  name: resource-objects.tenant.projectcapsule.dev
  namespaceSelector:
    matchExpressions:
      - key: capsule.clastix.io/tenant
        operator: Exists
  objectSelector:
    matchExpressions:
      - key: capsule.clastix.io/resources
        operator: Exists
  rules:
    - apiGroups:
        - '*'
      apiVersions:
        - '*'
      operations:
        - UPDATE
        - DELETE
      resources:
        - '*'
      scope: Namespaced
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- with .Values.webhooks.hooks.tenants }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/tenants" "ctx" $) | nindent 4 }}
  failurePolicy:  {{ .failurePolicy }}
  matchPolicy: Exact
  name: tenants.projectcapsule.dev
  namespaceSelector: {}
  objectSelector: {}
  rules:
    - apiGroups:
        - capsule.clastix.io
      apiVersions:
        - v1beta2
      operations:
        - CREATE
        - UPDATE
        - DELETE
      resources:
        - tenants
      scope: '*'
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- with .Values.webhooks.hooks.customresources }}
- admissionReviewVersions:
    - v1
    - v1beta1
  clientConfig:
    {{- include "capsule.webhooks.service" (dict "path" "/customresources" "ctx" $) | nindent 4 }}
  failurePolicy: {{ .failurePolicy }}
  matchPolicy: Equivalent
  name: customresources.tenant.projectcapsule.dev
  {{- with .namespaceSelector }}
  namespaceSelector:
    {{- toYaml . |  nindent 4 }}
  {{- end }}
  {{- with .objectSelector }}
  objectSelector:
    {{- toYaml . |  nindent 4 }}
  {{- end }}
  rules:
    - apiGroups:
        - '*'
      apiVersions:
        - '*'
      operations:
        - CREATE
        - UPDATE
        - DELETE
      resources:
        - '*'
      scope: Namespaced
  sideEffects: None
  timeoutSeconds: {{ $.Values.webhooks.validatingWebhooksTimeoutSeconds }}
{{- end }}
{{- end }}