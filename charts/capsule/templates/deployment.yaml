{{- if not $.Values.crds.exclusive }}
  {{- if eq .Values.manager.kind "Deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "capsule.controllerName" . }}
  labels:
    {{- include "capsule.labels" . | nindent 4 }}
  {{- with .Values.customAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "capsule.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "capsule.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "capsule.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.manager.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      {{- if .Values.manager.hostPID }}
      hostPID: {{ .Values.manager.hostPID }}
      {{- else }}
      hostPID: false
      {{- end }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "capsule.secretTlsName" . }}
        {{- if .Values.manager.volumes }}
        {{- toYaml .Values.manager.volumes | nindent 8 }}
        {{- end }}
      containers:
        - name: manager
          args:
            - --webhook-port={{ .Values.manager.webhookPort }}
            - --enable-leader-election
            - --zap-log-level={{ default 4 .Values.manager.options.logLevel }}
            - --configuration-name={{ .Values.manager.options.capsuleConfiguration }}
          image: {{ include "capsule.managerFullyQualifiedDockerImage" . }}
          imagePullPolicy: {{ .Values.manager.image.pullPolicy }}
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          ports:
            {{- if not (.Values.manager.hostNetwork) }}
            - name: webhook-server
              containerPort: {{ .Values.manager.webhookPort }}
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: health-api
              containerPort: 10080
              protocol: TCP
            {{- end }}
            {{- with .Values.manager.ports }}
              {{- . | nindent 12 }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.manager.livenessProbe | nindent 12}}
          readinessProbe:
            {{- toYaml .Values.manager.readinessProbe | nindent 12}}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          {{- if .Values.manager.volumeMounts }}
          {{- toYaml .Values.manager.volumeMounts | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.manager.resources | nindent 12 }}
          {{- if .Values.manager.securityContext }}
          securityContext: {{- omit .Values.manager.securityContext "enabled" | toYaml | nindent 12 }}
          {{- else if .Values.securityContext.enabled }}
          securityContext: {{- omit .Values.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
  {{- end }}
{{- end }}
